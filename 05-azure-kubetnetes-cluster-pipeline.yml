
trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'azure_rsa.pub'
- task: TerraformCLI@2
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    backendType: 'azurerm'
    backendServiceArm: 'azure-resource-manager-service-connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'dof-terraform-backend-rg'
    backendAzureRmResourceGroupLocation: 'westeurope'
    backendAzureRmStorageAccountName: 'saisarobackendtestabc'
    backendAzureRmContainerName: 'saisarocontainer'
    backendAzureRmKey: 'kubernetes-dev.tfstate'
    allowTelemetryCollection: true

# - task: TerraformCLI@2
#   inputs:
#     command: 'init'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
#     #commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_pub_key=$(publickey.secureFilePath)'
#     backendType: 'azurerm'
#     backendServiceArm: 'azure-resource-manager-service-connection'
#     ensureBackend: true
#     backendAzureRmResourceGroupName: 'azure-backend-rg'
#     backendAzureRmResourceGroupLocation: 'westeurope'
#     backendAzureRmStorageAccountName: 'storageacctsaisaro'
#     backendAzureRmContainerName: 'saisaro'
#     backendAzureRmKey: 'kubernetees-terraform.tfstate'
#     allowTelemetryCollection: true

# - task: TerraformCLI@2
#   inputs:
#     command: 'apply'
#     workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
#     commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_pub_key=$(publickey.secureFilePath)'
#     allowTelemetryCollection: true
